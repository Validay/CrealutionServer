version: '3.7'

services:
  webapp:
    container_name: 'webapi'
    image: webapi
    env_file:
      - .env  
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ${ConnectionString}
      - ${RedisUrl}
    restart: on-failure
    depends_on:
      - postgres
      - redis

  postgres:
    container_name: postgres
    image: postgres   
    env_file:
      - .env
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${PostgresUser}
      - POSTGRES_PASSWORD=${PostgresPassword}
      - POSTGRES_DB=${PostgresDbName}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${PostgresDbName}", "-U", "${PostgresUser}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: redis
    image: redis:6.2-alpine   
    env_file:
      - .env
    restart: always
    ports:
      - "6379:6379"
    volumes: 
      - redis:/data
    command: redis-server --save 20 1 --loglevel warning --requirepass ${RedisPassword}
    healthcheck:     
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:6.17
    env_file:
      - .env
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PgAdminEmail}
      PGADMIN_DEFAULT_PASSWORD: ${PgAdminPassword}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8009:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin

volumes:
  postgres_data:
  pgadmin-data:
  redis:
    driver: local
  grafana-data:
    driver: local